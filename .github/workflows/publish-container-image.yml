name: Publish Image to GHCR
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.txt"
  schedule:
    - cron: "0 0 * * 0"

env:
  IMAGE_NAME: llama-server
  QUANT: Q4_K_M

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        model:
          - Llama-3.2-1B-Instruct
          - Llama-3.2-3B-Instruct
          - FastLlama-3.2-1B-Instruct
          - Hermes-3-Llama-3.2-3B
          - Qwen_Qwen3-0.6B
          - Qwen_Qwen3-1.7B
          - Qwen_Qwen3-4B
          - Qwen2.5-Coder-0.5B-Instruct
          - Qwen2.5.1-Coder-1.5B-Instruct
          - Qwen2.5-Coder-3B-Instruct
          - granite-3.1-1b-a400m-instruct
          - granite-3.1-3b-a800m-instruct
          - ibm-granite_granite-3.3-2b-instruct
          - HuggingFaceTB_SmolLM3-3B
          - AMD-OLMo-1B-SFT-DPO
          - DeepSeek-R1-Distill-Qwen-1.5B
          - nvidia_AceInstruct-1.5B
          - agentica-org_DeepScaleR-1.5B-Preview
          - agentica-org_DeepCoder-1.5B-Preview
          - deepcogito_cogito-v1-preview-llama-3B
          - DeepSeek-R1-ReDistill-Qwen-1.5B-v1.0
          - microsoft_Phi-4-mini-instruct
          - microsoft_Phi-4-mini-reasoning
          - google_gemma-3-1b-it
          - google_gemma-3-4b-it
          - all-hands_openhands-lm-1.5b-v0.1
          - Zyphra_ZR1-1.5B
          - baidu_ERNIE-4.5-0.3B-PT

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Convert model name to lowercase
        id: change_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ matrix.model }}

      - name: Install huggingface-cli
        uses: BSFishy/pip-action@v1
        with:
          packages: huggingface_hub[cli]

      - name: Download GGUF
        run: |
          huggingface-cli download bartowski/${{ matrix.model }}-GGUF --include "${{ matrix.model }}-${{ env.QUANT }}.gguf" --local-dir .

      - name: Checksum GGUF
        run: |
          sha256sum ${{ matrix.model }}-${{ env.QUANT }}.gguf

      - name: Build Image with Buildah
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.change_case.outputs.lowercase }}
          build-args: |
            MODEL=${{ matrix.model }}
            QUANT=${{ env.QUANT }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=${{ matrix.model }}-${{ env.QUANT }}.gguf
            org.opencontainers.image.source=https://huggingface.co/bartowski/${{ matrix.model }}-GGUF

      - name: Start server
        uses: mathiasvr/command-output@v2.0.0
        id: container
        with:
          run: |
            podman run -d -p 8001:8080 localhost/${{ env.IMAGE_NAME }}:${{ steps.change_case.outputs.lowercase }}

      - name: Wait for server to load
        uses: juliangruber/sleep-action@v2.0.0
        with:
          time: 15s

      - name: Get chat completion
        uses: mathiasvr/command-output@v2.0.0
        id: api
        with:
          run: |
            curl -v \
            -H "Content-Type: application/json" \
            -d '{"messages":[{"role":"user","content":"who are you and what can you do?"}]}' \
            http://127.0.0.1:8001/v1/chat/completions

      - name: Format response
        uses: direct-actions/jq@v0.1.0
        with:
          input: ${{ steps.api.outputs.stdout }}
          filter: ".choices[0].message.content"
          raw-output: true

      - name: Print server logs
        run: |
          podman logs ${{ steps.container.outputs.stdout }}

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  prune:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: cleanup
        uses: dataaxiom/ghcr-cleanup-action@v1.0.13
        with:
          keep-n-tagged: 1
          older-than: 30 minutes
          delete-ghost-images: true
          delete-untagged: true
          token: ${{ secrets.GITHUB_TOKEN }}

  tags:
    runs-on: ubuntu-24.04
    needs: prune
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get tags
        uses: mathiasvr/command-output@v2.0.0
        id: skopeo
        with:
          run: |
            skopeo list-tags docker://ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }} | jq -r '.Repository as $repo | .Tags[] | "\($repo):\(.)"' | awk 'NR>1 {print ""} 1'

      - name: Update Readme
        uses: gnpaone/dynamic-update-readme@v1.0.2
        with:
          marker_text: "TAGS"
          markdown_text: |
            ```
            ${{ steps.skopeo.outputs.stdout }}
            ```
